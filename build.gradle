/**
 ******************  Script Configuration ******************
 */
buildscript {
    repositories {
        mavenCentral()

        gradlePluginPortal()

        maven {
            url "https://sandec.jfrog.io/artifactory/repo"
        }
    }

    dependencies {
        classpath "one.jpro:jpro-gradle-plugin:$jproVersion"
        classpath "org.openjfx:javafx-plugin:$javafxPluginVersion"
        classpath "de.qfs:qftest:2.0.2"
    }
}


/**
 ******************  Java Configuration ******************
 */
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jpro-gradle-plugin'
apply plugin: 'de.qfs.qftest'

compileJava {
    sourceCompatibility = 17
    targetCompatibility = 17
}

repositories {
    maven {
        url "https://sandec.jfrog.io/artifactory/repo"
    }
    mavenCentral()
}

dependencies {
    implementation "one.jpro.platform:jpro-routing-core:$jproPlatformVersion"
    implementation "one.jpro.platform:jpro-routing-dev:$jproPlatformVersion"
    implementation "one.jpro.platform:jpro-auth-routing:$jproPlatformVersion"
    implementation "one.jpro.platform:jpro-mdfx:$jproPlatformVersion"
    implementation "fr.brouillard.oss:cssfx:$cssfxVersion"
    implementation "commons-io:commons-io:$commonsIoVersion"
}

apply plugin: 'org.openjfx.javafxplugin'

javafx {
    version = '21.0.2-sandec'
    modules = ['javafx.base', 'javafx.graphics', 'javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.web']
}

/**
 ******************  jpro Configuration ******************
 */


/**
 * App Main Class
 */
mainClassName = 'com.jpro.hellojpro.HelloRoutingApp'

/**
 * jpro settings
 */
jpro {
    // for debugging
    // JVMArgs << '-agentlib:jdwp=transport=dt_socket,server=n,address=5006,suspend=y'

    JVMArgs << '-Xmx1000m'

    //jpro server port
    port = 8080

    openingPath = ""

    openURLOnStartup = false
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}


qftest {
    //versionDir = "C:/Program Files/QFS/QF-Test/qftest-6.0.5"
    //version = "latest" // not used, if "versionDir" is specified
    //baseUrl = "https://www.qfs.de/fileadmin/Webdata/pub/dev/31172/"

    //version = "local"
    version = "8.0.1"
  //  version = "8.0.1-dev"
    arguments = ["-license", "$projectDir/qftest.license"]
    //license = "$projectDir/qflicense.license"
    //license = "product = qftest\n"

    variables = ["webmode":"cdpdriver"]
    options = ["OPT_WEB_CDP_READ_TIMEOUT":10000]

    reportDir = "$projectDir/qftest"
    runLogDir = "$projectDir/qftest"

    keepRunLogs=true
}

test {
    useJUnitPlatform()
    testLogging {
        //outputs.upToDateWhen {false} //Enable if not running with 'clean'
        showStandardStreams = true
    }
    qftest {
        suites = ["$projectDir/suites/jpro-gradle.qft"]
    }
}